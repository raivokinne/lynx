let strlen = fn(s) {
    let i = 0
    for c in s {
        i = i + 1
    }
    return i
}

let trim = fn(s) {
    let n = strlen(s)
    let start = 0
    let stop = n - 1

    while start < n and (s[start] == " " or s[start] == "\t" or s[start] == "\n") {
        start = start + 1
    }

    while stop >= 0 and (s[stop] == " " or s[stop] == "\t" or s[stop] == "\n") {
        stop = stop - 1
    }

    if stop < start {
        return ""
    }

    let out = ""
    let i = start
    while i <= stop {
        out = out ++ s[i]
        i = i + 1
    }
    return out
}

let split = fn(s, sep) {
    let parts = []
    let current = ""
    let i = 0
    let n = len(s)

    while i < n {
        if s[i] == sep {
            parts = parts ++ [current]
            current = ""
        } else {
            current = current ++ s[i]
        }
        i = i + 1
    }

    parts = parts ++ [current]
    return parts
}

let join = fn(arr, sep) {
    let out = ""
    let first = true
    for item in arr {
        if !first {
            out = out ++ sep
        }
        out = out ++ item
        first = false
    }
    return out
}

