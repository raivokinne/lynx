name: Build and Release Lynx
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: arm64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: false

      - name: Initialize Go module (if needed)
        run: |
          if [ ! -f "go.mod" ]; then
            go mod init lynx
          fi
          go mod tidy
        shell: bash

      - name: Build
        run: |
          mkdir -p build
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="build/lynx-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          else
            OUTPUT="build/lynx-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi

          MAIN_PATH="./cmd/lynx"

          echo "Building with GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}"
          echo "Output file: $OUTPUT"
          echo "Main path: $MAIN_PATH"

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o "$OUTPUT" "$MAIN_PATH"

          # Verify the build succeeded
          if [ -f "$OUTPUT" ]; then
            echo "Build successful: $OUTPUT"
            ls -la "$OUTPUT"
          else
            echo "Build failed: $OUTPUT not found"
            exit 1
          fi
        shell: bash

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
